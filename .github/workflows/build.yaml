name: build
on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint code
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: "1.70.0"
      - name: Check lint
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: "-- -D warnings"
  fmt-check:
    name: Check formatting
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: "1.70.0"
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check
  compile:
    strategy:
      matrix:
        include:
          - output: linux-amd64
            target: x86_64-unknown-linux-musl
          - output: linux-arm64
            target: aarch64-unknown-linux-musl
    name: Compile ${{ matrix.target }} binary
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Compile
        run: |
          make target/${{ matrix.output }}
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: serveit-${{ matrix.output }}
          path: target/${{ matrix.output }}
  build-image:
    name: Build image
    needs:
      - lint
      - fmt-check
      - compile
    runs-on: ubuntu-22.04
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host
      - name: Setup Caching
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            buildx-${{ runner.os }}
      - name: Download linux/amd64 binary
        uses: actions/download-artifact@v3
        with:
          name: serveit-linux-amd64
          path: target
      - name: Download linux/arm64 binary
        uses: actions/download-artifact@v3
        with:
          name: serveit-linux-arm64
          path: target
      - name: Build image
        run: make image-only DOCKER_CACHE=/tmp/.buildx-cache
